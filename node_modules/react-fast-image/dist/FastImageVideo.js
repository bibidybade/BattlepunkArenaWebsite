"use strict";
var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
var react_1 = __importDefault(require("react"));
var emotion_1 = require("emotion");
var styles_1 = require("./styles");
var react_video_tag_1 = require("react-video-tag");
var getPaddingBottom_1 = require("./getPaddingBottom");
var noscript_1 = require("./noscript");
var supportsWebP_1 = __importDefault(require("./supportsWebP"));
var FastImageVideo = /** @class */ (function (_super) {
    __extends(FastImageVideo, _super);
    function FastImageVideo(props) {
        var _this = _super.call(this, props) || this;
        _this.onIntersection = function (entries) {
            if (!_this.intersectionObserver)
                return;
            var entry = entries[0] || {};
            // Edge doesn't currently support isIntersecting, so also test for an intersectionRatio > 0
            if (entry.isIntersecting || entry.intersectionRatio > 0) {
                _this.intersectionObserver.unobserve(entry.target);
                _this.onVisible();
            }
        };
        _this.onNextFrame = function () {
            if (_this.media) {
                _this.media.className = emotion_1.cx(styles_1.cssAsset, _this.props.classNameMedia, _this.props.classNameMediaVisible);
            }
        };
        _this.onVisible = function () {
            if (!_this.inner)
                return;
            var media = document.createElement('video');
            media.className = emotion_1.cx(styles_1.cssAsset, _this.props.classNameMedia);
            media.src = _this.src();
            media.setAttribute('src', _this.src());
            media.poster = _this.poster();
            media.setAttribute('poster', _this.poster());
            media.muted = true;
            media.setAttribute('muted', '');
            media.playsinline = true;
            media.setAttribute('playsinline', '');
            media.autoplay = true;
            media.setAttribute('autoplay', '');
            media.loop = true;
            media.setAttribute('loop', '');
            _this.inner.appendChild(media);
            setTimeout(_this.onNextFrame, 32);
        };
        _this.captureInnerRef = function (ref) { return (_this.inner = ref); };
        _this.captureOuterRef = function (ref) {
            if (ref && _this.intersectionObserver) {
                _this.intersectionObserver.observe(ref);
            }
            _this.outer = ref;
        };
        _this.src = function () { return _this.props.src || ''; };
        _this.poster = function () {
            return supportsWebP_1.default ? _this.props.posterWebPSrc || _this.props.posterSrc : _this.props.posterSrc;
        };
        // tslint:disable-next-line
        if (typeof window === 'undefined')
            return _this;
        if (window.IntersectionObserver) {
            _this.intersectionObserver = new IntersectionObserver(_this.onIntersection, {
                rootMargin: props.lazyLoadMargin,
                threshold: 0,
            });
        }
        return _this;
    }
    FastImageVideo.prototype.componentWillUnmount = function () {
        if (!this.intersectionObserver)
            return;
        if (this.outer) {
            this.intersectionObserver.unobserve(this.outer);
        }
    };
    FastImageVideo.prototype.render = function () {
        var _a = this.props, posterBase64 = _a.posterBase64, className = _a.className, classNameContainer = _a.classNameContainer, classNameMedia = _a.classNameMedia, lazy = _a.lazy, height = _a.height, width = _a.width;
        var videoHtml = react_video_tag_1.videoTagString({
            src: this.src(),
            poster: this.poster(),
            muted: true,
            autoPlay: true,
            playsInline: true,
            loop: true,
            className: emotion_1.cx(styles_1.cssAsset, classNameMedia),
        });
        var html = lazy ? noscript_1.noscript(videoHtml) : videoHtml;
        return (react_1.default.createElement("span", { style: { width: width }, className: emotion_1.cx(styles_1.cssContainerOuter, className), ref: this.captureOuterRef },
            react_1.default.createElement("span", { className: emotion_1.cx(styles_1.cssContainerInner, classNameContainer), style: {
                    paddingBottom: getPaddingBottom_1.getPaddingBottom(width, height),
                    backgroundSize: 'cover',
                    backgroundImage: posterBase64 ? "url('" + posterBase64 + "')" : undefined,
                }, ref: lazy ? this.captureInnerRef : undefined, dangerouslySetInnerHTML: { __html: html } })));
    };
    return FastImageVideo;
}(react_1.default.PureComponent));
exports.FastImageVideo = FastImageVideo;
//# sourceMappingURL=FastImageVideo.js.map