(function (global, factory) {
    typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('emotion'), require('react')) :
    typeof define === 'function' && define.amd ? define(['exports', 'emotion', 'react'], factory) :
    (factory((global.reactFastImage = {}),null,global.React));
}(this, (function (exports,emotion,React) { 'use strict';

    var React__default = 'default' in React ? React['default'] : React;

    /*! *****************************************************************************
    Copyright (c) Microsoft Corporation. All rights reserved.
    Licensed under the Apache License, Version 2.0 (the "License"); you may not use
    this file except in compliance with the License. You may obtain a copy of the
    License at http://www.apache.org/licenses/LICENSE-2.0

    THIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
    KIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED
    WARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,
    MERCHANTABLITY OR NON-INFRINGEMENT.

    See the Apache Version 2.0 License for specific language governing permissions
    and limitations under the License.
    ***************************************************************************** */
    /* global Reflect, Promise */

    var extendStatics = function(d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };

    function __extends(d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    }

    var __assign = function() {
        __assign = Object.assign || function __assign(t) {
            for (var s, i = 1, n = arguments.length; i < n; i++) {
                s = arguments[i];
                for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];
            }
            return t;
        };
        return __assign.apply(this, arguments);
    };

    function __rest(s, e) {
        var t = {};
        for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
            t[p] = s[p];
        if (s != null && typeof Object.getOwnPropertySymbols === "function")
            for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0)
                t[p[i]] = s[p[i]];
        return t;
    }

    function __makeTemplateObject(cooked, raw) {
        if (Object.defineProperty) { Object.defineProperty(cooked, "raw", { value: raw }); } else { cooked.raw = raw; }
        return cooked;
    }

    var cssContainerOuter = emotion.css(templateObject_1 || (templateObject_1 = __makeTemplateObject(["\n    position: relative;\n    display: block;\n    margin-left: auto;\n    margin-right: auto;\n"], ["\n    position: relative;\n    display: block;\n    margin-left: auto;\n    margin-right: auto;\n"])));
    var cssContainerInner = emotion.css(templateObject_2 || (templateObject_2 = __makeTemplateObject(["\n    position: relative;\n    display: block;\n    top: 0;\n    left: 0;\n"], ["\n    position: relative;\n    display: block;\n    top: 0;\n    left: 0;\n"])));
    var cssAsset = emotion.css(templateObject_3 || (templateObject_3 = __makeTemplateObject(["\n    position: absolute;\n    width: 100%;\n    height: 100%;\n    margin: 0;\n    vertical-align: middle;\n    top: 0;\n    left: 0;\n"], ["\n    position: absolute;\n    width: 100%;\n    height: 100%;\n    margin: 0;\n    vertical-align: middle;\n    top: 0;\n    left: 0;\n"])));
    var templateObject_1, templateObject_2, templateObject_3;

    var getPaddingBottom = function (width, height) {
        if (!width || !height)
            return '100%';
        return (height / width) * 100 + "%";
    };

    var imgTagString = function (props) {
        if (props === void 0) { props = {}; }
        var classOrClassName = props.className || props.class;
        var classString = classOrClassName ? " class=\"" + classOrClassName + "\"" : "";
        var src = props.src ? "src=\"" + props.src + "\" " : "src=\"\" "; // required attribute
        var srcSet = props.srcSet ? "srcset=\"" + props.srcSet + "\" " : "";
        var sizes = props.sizes ? "sizes=\"" + props.sizes + "\" " : "";
        var title = props.title ? "title=\"" + props.title + "\" " : "";
        var alt = props.alt ? "alt=\"" + props.alt + "\" " : "alt=\"\" "; // required attribute
        var width = props.width ? "width=\"" + props.width + "\" " : "";
        var height = props.height ? "height=\"" + props.height + "\" " : "";
        return "<img " + width + height + src + srcSet + alt + title + sizes + classString + "/>";
    };

    var noscript = function (content) { return "<noscript>" + content + "</noscript>"; };

    // https://github.com/bfred-it/supports-webp
    // tslint:disable-next-line
    var canvas = typeof document === 'object' ? document.createElement('canvas') : {};
    canvas.width = canvas.height = 1;
    var supportsWebP = canvas.toDataURL
        ? canvas.toDataURL('image/webp').indexOf('image/webp') === 5
        : false;

    var FastImageImage = /** @class */ (function (_super) {
        __extends(FastImageImage, _super);
        function FastImageImage(props) {
            var _this = _super.call(this, props) || this;
            _this.onIntersection = function (entries) {
                if (!_this.intersectionObserver)
                    return;
                var entry = entries[0] || {};
                // Edge doesn't currently support isIntersecting, so also test for an intersectionRatio > 0
                if (entry.isIntersecting || entry.intersectionRatio > 0) {
                    _this.intersectionObserver.unobserve(entry.target);
                    _this.onVisible();
                }
            };
            _this.onNextFrame = function () {
                if (_this.media && _this.outer && _this.inner) {
                    _this.media.className = emotion.cx(cssAsset, _this.props.classNameMedia, _this.props.classNameMediaVisible);
                    _this.outer.className = emotion.cx(cssContainerOuter, _this.props.className, _this.props.classNameVisible);
                    _this.inner.className = emotion.cx(cssContainerInner, _this.props.classNameContainer, _this.props.classNameContainerVisible);
                }
            };
            _this.onDecode = function () {
                if (_this.inner && _this.media) {
                    _this.inner.appendChild(_this.media);
                    setTimeout(_this.onNextFrame, 32);
                    if (_this.props.onAddedToDOM) {
                        _this.props.onAddedToDOM();
                    }
                }
            };
            _this.onLoad = function () {
                if (_this.media.decode) {
                    _this.media.decode().then(_this.onDecode);
                }
                else {
                    setTimeout(_this.onDecode);
                }
            };
            _this.src = function () { return (supportsWebP ? _this.props.webPSrc || _this.props.src : _this.props.src); };
            _this.srcSet = function () { return (supportsWebP ? _this.props.webPSrcSet || _this.props.srcSet : _this.props.srcSet); };
            _this.onVisible = function () {
                var media = new Image();
                // We will load the image, then decode it, then add it to the DOM.
                // By doing this we can ensure we will minimize frame drops.
                media.onload = _this.onLoad;
                // Set props.
                // Order is important.
                media.sizes = _this.props.sizes || '';
                media.srcset = _this.srcSet() || '';
                media.src = _this.src() || '';
                media.alt = _this.props.alt || '';
                media.className = emotion.cx(cssAsset, _this.props.classNameMedia);
                _this.media = media;
            };
            _this.captureInnerRef = function (ref) { return (_this.inner = ref); };
            _this.captureOuterRef = function (ref) {
                if (ref && _this.intersectionObserver) {
                    _this.intersectionObserver.observe(ref);
                }
                _this.outer = ref;
            };
            // tslint:disable-next-line
            if (typeof window === 'undefined')
                return _this;
            if (window.IntersectionObserver) {
                _this.intersectionObserver = new IntersectionObserver(_this.onIntersection, {
                    rootMargin: props.lazyLoadMargin,
                    threshold: 0,
                });
            }
            return _this;
        }
        FastImageImage.prototype.componentWillUnmount = function () {
            if (!this.intersectionObserver)
                return;
            if (this.outer) {
                this.intersectionObserver.unobserve(this.outer);
            }
        };
        FastImageImage.prototype.render = function () {
            var _a = this.props, base64 = _a.base64, className = _a.className, classNameContainer = _a.classNameContainer, classNameMedia = _a.classNameMedia, lazy = _a.lazy, alt = _a.alt, sizes = _a.sizes, height = _a.height, width = _a.width;
            var imgHtml = imgTagString({
                src: this.src(),
                srcSet: this.srcSet(),
                alt: alt,
                sizes: sizes,
                className: emotion.cx(cssAsset, classNameMedia),
            });
            var html = lazy ? noscript(imgHtml) : imgHtml;
            return (React__default.createElement("span", { style: { width: width }, className: emotion.cx(cssContainerOuter, className), ref: this.captureOuterRef },
                React__default.createElement("span", { className: emotion.cx(cssContainerInner, classNameContainer), style: {
                        paddingBottom: getPaddingBottom(width, height),
                        backgroundSize: 'cover',
                        backgroundImage: base64 ? "url('" + base64 + "')" : undefined,
                    }, ref: lazy ? this.captureInnerRef : undefined, dangerouslySetInnerHTML: { __html: html } })));
        };
        return FastImageImage;
    }(React.PureComponent));

    var videoTagString = function (props) {
        if (props === void 0) { props = {}; }
        var classOrClassName = props.className || props.class;
        var classString = classOrClassName ? " class=\"" + classOrClassName + "\"" : "";
        var muted = props.muted ? " muted" : "";
        var autoPlay = props.autoPlay ? " autoplay" : "";
        var playsInline = props.playsInline ? " playsinline" : "";
        var loop = props.loop ? " loop" : "";
        var poster = props.poster ? " poster" : "";
        var src = props.src ? " src=\"" + props.src + "\"" : " src=\"\""; // required
        var type = props.type ? " type=\"" + props.type + "\"" : "";
        return "<video" + classString + muted + autoPlay + playsInline + loop + poster + "><source" + src + type + "></video>";
    };

    var FastImageVideo = /** @class */ (function (_super) {
        __extends(FastImageVideo, _super);
        function FastImageVideo(props) {
            var _this = _super.call(this, props) || this;
            _this.onIntersection = function (entries) {
                if (!_this.intersectionObserver)
                    return;
                var entry = entries[0] || {};
                // Edge doesn't currently support isIntersecting, so also test for an intersectionRatio > 0
                if (entry.isIntersecting || entry.intersectionRatio > 0) {
                    _this.intersectionObserver.unobserve(entry.target);
                    _this.onVisible();
                }
            };
            _this.onNextFrame = function () {
                if (_this.media) {
                    _this.media.className = emotion.cx(cssAsset, _this.props.classNameMedia, _this.props.classNameMediaVisible);
                }
            };
            _this.onVisible = function () {
                if (!_this.inner)
                    return;
                var media = document.createElement('video');
                media.className = emotion.cx(cssAsset, _this.props.classNameMedia);
                media.src = _this.src();
                media.setAttribute('src', _this.src());
                media.poster = _this.poster();
                media.setAttribute('poster', _this.poster());
                media.muted = true;
                media.setAttribute('muted', '');
                media.playsinline = true;
                media.setAttribute('playsinline', '');
                media.autoplay = true;
                media.setAttribute('autoplay', '');
                media.loop = true;
                media.setAttribute('loop', '');
                _this.inner.appendChild(media);
                setTimeout(_this.onNextFrame, 32);
            };
            _this.captureInnerRef = function (ref) { return (_this.inner = ref); };
            _this.captureOuterRef = function (ref) {
                if (ref && _this.intersectionObserver) {
                    _this.intersectionObserver.observe(ref);
                }
                _this.outer = ref;
            };
            _this.src = function () { return _this.props.src || ''; };
            _this.poster = function () {
                return supportsWebP ? _this.props.posterWebPSrc || _this.props.posterSrc : _this.props.posterSrc;
            };
            // tslint:disable-next-line
            if (typeof window === 'undefined')
                return _this;
            if (window.IntersectionObserver) {
                _this.intersectionObserver = new IntersectionObserver(_this.onIntersection, {
                    rootMargin: props.lazyLoadMargin,
                    threshold: 0,
                });
            }
            return _this;
        }
        FastImageVideo.prototype.componentWillUnmount = function () {
            if (!this.intersectionObserver)
                return;
            if (this.outer) {
                this.intersectionObserver.unobserve(this.outer);
            }
        };
        FastImageVideo.prototype.render = function () {
            var _a = this.props, posterBase64 = _a.posterBase64, className = _a.className, classNameContainer = _a.classNameContainer, classNameMedia = _a.classNameMedia, lazy = _a.lazy, height = _a.height, width = _a.width;
            var videoHtml = videoTagString({
                src: this.src(),
                poster: this.poster(),
                muted: true,
                autoPlay: true,
                playsInline: true,
                loop: true,
                className: emotion.cx(cssAsset, classNameMedia),
            });
            var html = lazy ? noscript(videoHtml) : videoHtml;
            return (React__default.createElement("span", { style: { width: width }, className: emotion.cx(cssContainerOuter, className), ref: this.captureOuterRef },
                React__default.createElement("span", { className: emotion.cx(cssContainerInner, classNameContainer), style: {
                        paddingBottom: getPaddingBottom(width, height),
                        backgroundSize: 'cover',
                        backgroundImage: posterBase64 ? "url('" + posterBase64 + "')" : undefined,
                    }, ref: lazy ? this.captureInnerRef : undefined, dangerouslySetInnerHTML: { __html: html } })));
        };
        return FastImageVideo;
    }(React__default.PureComponent));

    var defaultProps = {
        lazy: true,
        lazyLoadMargin: '500px',
    };
    var FastImage = /** @class */ (function (_super) {
        __extends(FastImage, _super);
        function FastImage() {
            return _super !== null && _super.apply(this, arguments) || this;
        }
        FastImage.prototype.render = function () {
            if (this.props.imgSrc) {
                var _a = this.props, imgAlt = _a.imgAlt, imgSizes = _a.imgSizes, imgSrc = _a.imgSrc, imgSrcSet = _a.imgSrcSet, imgWebPSrc = _a.imgWebPSrc, imgWebPSrcSet = _a.imgWebPSrcSet, imgBase64 = _a.imgBase64, otherProps = __rest(_a, ["imgAlt", "imgSizes", "imgSrc", "imgSrcSet", "imgWebPSrc", "imgWebPSrcSet", "imgBase64"]);
                return (React__default.createElement(FastImageImage, __assign({ src: imgSrc, srcSet: imgSrcSet, base64: imgBase64, webPSrc: imgWebPSrc, webPSrcSet: imgWebPSrcSet, alt: imgAlt, sizes: imgSizes }, otherProps)));
            }
            if (this.props.videoSrc) {
                var _b = this.props, videoSrc = _b.videoSrc, videoPosterSrc = _b.videoPosterSrc, videoPosterWebPSrc = _b.videoPosterWebPSrc, videoPosterBase64 = _b.videoPosterBase64, otherProps = __rest(_b, ["videoSrc", "videoPosterSrc", "videoPosterWebPSrc", "videoPosterBase64"]);
                return (React__default.createElement(FastImageVideo, __assign({ src: videoSrc, posterSrc: videoPosterSrc, posterWebPSrc: videoPosterWebPSrc, posterBase64: videoPosterBase64 }, otherProps)));
            }
            console.error('No src for FastImage.');
            return null;
        };
        FastImage.defaultProps = defaultProps;
        return FastImage;
    }(React__default.PureComponent));

    exports.FastImage = FastImage;
    exports.FastImageImage = FastImageImage;
    exports.FastImageVideo = FastImageVideo;

    Object.defineProperty(exports, '__esModule', { value: true });

})));
//# sourceMappingURL=index.umd.js.map
