{"version":3,"file":"index.module.js","sources":["../src/utils.ts","../src/index.ts","../src/use-force-update.ts","../src/use-get-set.ts"],"sourcesContent":["export type position = { x: number; y: number };\nexport type transform = { x: number; y: number; zoom: number };\n\nexport function noop() {}\n\nexport const clamp = (min: number, max: number) => (value: number) =>\n  Math.max(min, Math.min(value, max));\n\nexport function dist(a: position, b: position) {\n  return Math.sqrt(Math.pow(a.x - b.x, 2) + Math.pow(a.y - b.y, 2));\n}\n\nexport function getPositionOnElement(\n  element: HTMLElement | null | undefined,\n  position: position\n): position {\n  const positionOnElement = { ...position };\n  while (element) {\n    positionOnElement.x -= element.offsetLeft;\n    positionOnElement.y -= element.offsetTop;\n    element = <HTMLElement | undefined>element.offsetParent;\n  }\n  return positionOnElement;\n}\n","import { useCallback, useMemo, useRef } from \"react\";\n\nimport {\n  noop,\n  clamp,\n  dist,\n  getPositionOnElement,\n  position,\n  transform,\n} from \"./utils\";\n\nimport useGetSet from \"./use-get-set\";\nimport useForceUpdate from \"./use-force-update\";\n\nexport default function usePanZoom({\n  enablePan = true,\n  enableZoom = true,\n  requireCtrlToZoom = false,\n  disableWheel = false,\n  panOnDrag = true,\n  preventClickOnPan = true,\n  zoomSensitivity = 0.01,\n  minZoom = 0,\n  maxZoom = Infinity,\n  minX = -Infinity,\n  maxX = Infinity,\n  minY = -Infinity,\n  maxY = Infinity,\n  initialZoom = 1,\n  initialPan = { x: 0, y: 0 },\n  onPanStart = noop,\n  onPan = noop,\n  onPanEnd = noop,\n  onZoom = noop,\n}: {\n  enablePan?: boolean;\n  enableZoom?: boolean;\n  requireCtrlToZoom?: boolean;\n  disableWheel?: boolean;\n  panOnDrag?: boolean;\n  preventClickOnPan?: boolean;\n  zoomSensitivity?: number;\n  minZoom?: number;\n  maxZoom?: number;\n  minX?: number;\n  maxX?: number;\n  minY?: number;\n  maxY?: number;\n  initialZoom?: number;\n  initialPan?: position;\n  onPanStart?: (touches: position[], transform: transform) => void;\n  onPan?: (touches: position[], transform: transform) => void;\n  onPanEnd?: () => void;\n  onZoom?: (transform: transform) => void;\n} = {}) {\n  const containerRef = useRef<HTMLElement | null>(null);\n  const forceUpdate = useForceUpdate();\n  const [getState, setState] = useGetSet<{\n    wasPanning: boolean;\n    isPanning: boolean;\n    prevPointers: position[];\n    prevZoom: number;\n    center: position;\n    transform: transform;\n  }>({\n    wasPanning: false,\n    isPanning: false,\n    prevPointers: [],\n    prevZoom: 1,\n    center: { x: 0, y: 0 },\n    transform: { ...initialPan, zoom: initialZoom },\n  });\n\n  const clampX = useMemo(() => clamp(minX, maxX), [minX, maxX]);\n  const clampY = useMemo(() => clamp(minY, maxY), [minY, maxY]);\n  const clampZoom = useMemo(() => clamp(minZoom, maxZoom), [minZoom, maxZoom]);\n\n  const setTransform = useCallback(\n    (v: transform | ((current: transform) => transform)) => {\n      const container = containerRef.current;\n      const state = getState();\n      if (container) {\n        state.transform = typeof v === \"function\" ? v(state.transform) : v;\n        state.center.x =\n          (container.offsetWidth / 2 - state.transform.x) /\n          state.transform.zoom;\n        state.center.y =\n          (container.offsetHeight / 2 - state.transform.y) /\n          state.transform.zoom;\n\n        setState(state);\n        forceUpdate();\n      }\n      return state.transform;\n    },\n    [getState, setState, forceUpdate]\n  );\n\n  const setPan = useCallback(\n    (value: ((current: position) => position) | position) =>\n      setTransform(({ x, y, zoom }) => {\n        const newPan = typeof value === \"function\" ? value({ x, y }) : value;\n\n        return {\n          x: clampX(newPan.x),\n          y: clampY(newPan.y),\n          zoom,\n        };\n      }),\n    [clampX, clampY, setTransform]\n  );\n\n  const setZoom = useCallback(\n    (value: number | ((current: number) => number), maybeCenter?: position) => {\n      const container = containerRef.current;\n      if (container) {\n        setTransform(({ x, y, zoom }) => {\n          const newZoom = clampZoom(\n            typeof value === \"function\" ? value(zoom) : value\n          );\n\n          const center = maybeCenter\n            ? {\n                x: maybeCenter.x - container.offsetWidth / 2,\n                y: maybeCenter.y - container.offsetHeight / 2,\n              }\n            : { x: 0, y: 0 };\n\n          return {\n            x: clampX(x + ((center.x - x) * (zoom - newZoom)) / zoom),\n            y: clampY(y + ((center.y - y) * (zoom - newZoom)) / zoom),\n            zoom: newZoom,\n          };\n        });\n      }\n    },\n    [clampX, clampY, clampZoom, setTransform]\n  );\n\n  const startPanZoom = useCallback(\n    (pointers: position[]) => {\n      if (enablePan) {\n        const state = getState();\n        state.prevPointers = pointers;\n        state.isPanning = true;\n        setState(state);\n        onPanStart(pointers, state.transform);\n      }\n    },\n    [enablePan, onPanStart, setState, getState]\n  );\n\n  const movePanZoom = useCallback(\n    (pointers: position[]) => {\n      const state = getState();\n      if (state.isPanning) {\n        state.wasPanning = true;\n\n        const prevPointers = state.prevPointers;\n        state.prevPointers = pointers;\n        setState(state);\n\n        let dx = 0,\n          dy = 0;\n        const l = Math.min(pointers.length, prevPointers.length, 2);\n\n        for (let i = 0; i < l; i++) {\n          dx += pointers[i].x - prevPointers[i].x;\n          dy += pointers[i].y - prevPointers[i].y;\n        }\n        dx /= l;\n        dy /= l;\n        const scale =\n          l === 2\n            ? dist(pointers[0], pointers[1]) /\n              dist(prevPointers[0], prevPointers[1])\n            : 1;\n\n        setPan(({ x, y }) => ({\n          x: x + dx,\n          y: y + dy,\n        }));\n        setZoom((zoom) => zoom * scale);\n\n        forceUpdate();\n        onPan(pointers, getState().transform);\n      }\n    },\n    [onPan, setPan, setZoom, getState, setState, forceUpdate]\n  );\n\n  const endPanZoom = useCallback(() => {\n    const state = getState();\n    if (state.isPanning) {\n      setState((state) => ({ ...state, isPanning: false }));\n      onPanEnd();\n    }\n  }, [onPanEnd, getState, setState]);\n\n  const onClickCapture = useCallback(\n    (event: React.MouseEvent) => {\n      const state = getState();\n      if (preventClickOnPan && state.wasPanning) {\n        setState((state) => ({ ...state, wasPanning: false }));\n        event.stopPropagation();\n      }\n    },\n    [preventClickOnPan, getState, setState]\n  );\n\n  const onWheel = useCallback(\n    (event) => {\n      if (enableZoom && containerRef.current) {\n        event.preventDefault();\n        if (!requireCtrlToZoom || event.ctrlKey) {\n          const pointerPosition = getPositionOnElement(containerRef.current, {\n            x: event.pageX,\n            y: event.pageY,\n          });\n\n          let deltaY = event.deltaY;\n          if (event.deltaMode === 1) {\n            deltaY *= 15;\n          }\n\n          setZoom(\n            (zoom) => zoom * Math.pow(1 - zoomSensitivity, deltaY),\n            pointerPosition\n          );\n\n          onZoom(getState().transform);\n        } else {\n          setPan(({ x, y }) => ({\n            x: x - event.deltaX,\n            y: y - event.deltaY,\n          }));\n        }\n      }\n    },\n    [\n      enableZoom,\n      requireCtrlToZoom,\n      zoomSensitivity,\n      onZoom,\n      setPan,\n      setZoom,\n      getState,\n    ]\n  );\n\n  const onGestureStart = useCallback(\n    (event) => {\n      event.preventDefault();\n      setState((state) => ({ ...state, prevZoom: state.transform.zoom }));\n    },\n    [setState]\n  );\n\n  const onGesture = useCallback(\n    (event) => {\n      event.preventDefault();\n\n      const pointerPosition = getPositionOnElement(containerRef.current, {\n        x: event.pageX,\n        y: event.pageY,\n      });\n      setZoom(getState().prevZoom * event.scale, pointerPosition);\n      onZoom(getState().transform);\n    },\n    [setZoom, onZoom, getState]\n  );\n\n  const setContainer = useCallback(\n    (el) => {\n      if (el) {\n        if (!disableWheel) {\n          el.addEventListener(\"wheel\", onWheel);\n        }\n        el.addEventListener(\"gesturestart\", onGestureStart);\n        el.addEventListener(\"gesturechange\", onGesture);\n        el.addEventListener(\"gestureend\", onGesture);\n      } else if (containerRef.current) {\n        return () => {\n          const container = containerRef.current;\n          if (container) {\n            if (!disableWheel) {\n              container.removeEventListener(\"wheel\", onWheel);\n            }\n            container.removeEventListener(\"gesturestart\", onGestureStart);\n            container.removeEventListener(\"gesturechange\", onGesture);\n            container.removeEventListener(\"gestureend\", onGesture);\n          }\n        };\n      }\n      containerRef.current = el;\n    },\n    [onWheel, onGestureStart, onGesture, disableWheel]\n  );\n\n  const onTouchStart = useCallback(\n    (event: React.TouchEvent) =>\n      startPanZoom(\n        Array.from(event.touches).map(({ pageX, pageY }) => ({\n          x: pageX,\n          y: pageY,\n        }))\n      ),\n    [startPanZoom]\n  );\n  const onTouchMove = useCallback(\n    (event: React.TouchEvent) =>\n      movePanZoom(\n        Array.from(event.touches).map(({ pageX, pageY }) => ({\n          x: pageX,\n          y: pageY,\n        }))\n      ),\n    [movePanZoom]\n  );\n  const onTouchEnd = useCallback(\n    (event: React.TouchEvent) => {\n      if (event.touches.length === 0) {\n        endPanZoom();\n      } else {\n        startPanZoom(\n          Array.from(event.touches).map(({ pageX, pageY }) => ({\n            x: pageX,\n            y: pageY,\n          }))\n        );\n      }\n    },\n    [endPanZoom, startPanZoom]\n  );\n  const onMouseDown = useCallback(\n    (event: React.MouseEvent) =>\n      startPanZoom([{ x: event.pageX, y: event.pageY }]),\n    [startPanZoom]\n  );\n  const onMouseMove = useCallback(\n    (event: React.MouseEvent) =>\n      movePanZoom([{ x: event.pageX, y: event.pageY }]),\n    [movePanZoom]\n  );\n\n  const state = getState();\n  return {\n    container: containerRef.current,\n    setContainer,\n    transform: `translate3D(${state.transform.x}px, ${state.transform.y}px, 0) scale(${state.transform.zoom})`,\n    center: state.center,\n    pan: { x: state.transform.x, y: state.transform.y },\n    zoom: state.transform.zoom,\n    setPan,\n    setZoom,\n    panZoomHandlers: panOnDrag\n      ? {\n          onTouchStart,\n          onTouchMove,\n          onTouchEnd: onTouchEnd,\n          onTouchCancel: onTouchEnd,\n          onMouseDown,\n          onMouseMove,\n          onMouseUp: endPanZoom,\n          onMouseLeave: endPanZoom,\n          onClickCapture,\n        }\n      : {},\n  };\n}\n","import { useCallback, useState } from \"react\";\n\nexport default function useForceUpdate() {\n  const [, dispatch] = useState(false);\n  const forceUpdate = useCallback(() => {\n    dispatch((state) => !state);\n  }, []);\n\n  return forceUpdate;\n}\n","import { useCallback, useRef } from \"react\";\n\nexport default function useGetSet<T>(\n  initialValue: T\n): [() => T, (value: ((current: T) => T) | T) => T] {\n  const ref = useRef(initialValue);\n  const get = useCallback(() => ref.current, []);\n  const set = useCallback((value: ((current: T) => T) | T) => {\n    if (typeof value === \"function\") {\n      ref.current = (value as (current: T) => T)(ref.current);\n    } else {\n      ref.current = value;\n    }\n    return ref.current;\n  }, []);\n\n  return [get, set];\n}\n"],"names":["noop","clamp","min","max","value","Math","dist","a","b","sqrt","pow","x","y","getPositionOnElement","element","position","positionOnElement","offsetLeft","offsetTop","offsetParent","usePanZoom","dispatch","initialValue","ref","enablePan","enableZoom","requireCtrlToZoom","disableWheel","panOnDrag","preventClickOnPan","zoomSensitivity","minZoom","maxZoom","Infinity","minX","maxX","minY","maxY","initialZoom","initialPan","onPanStart","onPan","onPanEnd","onZoom","containerRef","useRef","forceUpdate","useState","useCallback","state","wasPanning","isPanning","prevPointers","prevZoom","center","transform","zoom","current","getState","setState","clampX","useMemo","clampY","clampZoom","setTransform","v","container","offsetWidth","offsetHeight","setPan","newPan","setZoom","maybeCenter","newZoom","startPanZoom","pointers","movePanZoom","dx","dy","l","length","i","scale","endPanZoom","onClickCapture","event","stopPropagation","onWheel","preventDefault","ctrlKey","pointerPosition","pageX","pageY","deltaY","deltaMode","deltaX","onGestureStart","onGesture","setContainer","el","addEventListener","removeEventListener","onTouchStart","Array","from","touches","map","onTouchMove","onTouchEnd","onMouseDown","onMouseMove","pan","panZoomHandlers","onTouchCancel","onMouseUp","onMouseLeave"],"mappings":"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"}